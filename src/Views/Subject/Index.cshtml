@model IEnumerable<SmartPlanner.Application.DTOs.SubjectDTO>

@{
    ViewData["Title"] = "My Subjects";
}

<div class="container-fluid py-4">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header pb-0">
                    <div class="d-lg-flex">
                        <div>
                            <h5 class="mb-0">My Subjects</h5>
                            <p class="text-sm mb-0">Manage your study subjects</p>
                        </div>
                        <div class="ms-auto my-auto mt-lg-0 mt-4">
                            <div class="ms-auto my-auto">
                                <a href="@Url.Action("Create")" class="btn bg-gradient-primary btn-sm mb-0">
                                    <i class="fas fa-plus"></i>&nbsp;&nbsp;Add New Subject
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="card-body px-0 pb-0">
                    @if (TempData["SuccessMessage"] != null)
                    {
                        <div class="alert alert-success alert-dismissible fade show mx-4" role="alert">
                            @TempData["SuccessMessage"]
                            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                        </div>
                    }
                    @if (TempData["ErrorMessage"] != null)
                    {
                        <div class="alert alert-danger alert-dismissible fade show mx-4" role="alert">
                            @TempData["ErrorMessage"]
                            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                        </div>
                    }

                    @if (Model.Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-flush" id="subjects-table">
                                <thead class="thead-light">
                                    <tr>
                                        <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Subject</th>
                                        <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7 ps-2">Description</th>
                                        <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Tasks</th>
                                        <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Progress</th>
                                        <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Created</th>
                                        <th class="text-secondary opacity-7">Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var subject in Model)
                                    {
                                        <tr>
                                            <td>
                                                <div class="d-flex px-2 py-1">
                                                    <div class="d-flex flex-column justify-content-center">
                                                        <h6 class="mb-0 text-sm">@subject.Name</h6>
                                                    </div>
                                                </div>
                                            </td>
                                            <td>
                                                <p class="text-xs text-secondary mb-0">
                                                    @(string.IsNullOrEmpty(subject.Description) ? "No description" : subject.Description)
                                                </p>
                                            </td>
                                            <td class="align-middle text-center text-sm">
                                                @if (subject.Tasks.Any())
                                                {
                                                    <div class="task-list-preview">
                                                        @foreach (var task in subject.Tasks)
                                                        {
                                                            <div class="task-item d-flex align-items-center mb-1">
                                                                @if (task.IsDone)
                                                                {
                                                                    <i class="fas fa-check-circle text-success me-2"></i>
                                                                    <span class="text-decoration-line-through text-muted text-xs">@task.Title</span>
                                                                }
                                                                else
                                                                {
                                                                    @if (task.Deadline < DateTime.Now)
                                                                    {
                                                                        <i class="fas fa-exclamation-circle text-danger me-2"></i>
                                                                        <span class="text-danger text-xs fw-bold">@task.Title</span>
                                                                    }
                                                                    else if (task.Deadline <= DateTime.Now.AddDays(3))
                                                                    {
                                                                        <i class="fas fa-clock text-warning me-2"></i>
                                                                        <span class="text-warning text-xs">@task.Title</span>
                                                                    }
                                                                    else
                                                                    {
                                                                        <i class="fas fa-circle text-secondary me-2" style="font-size: 0.5rem;"></i>
                                                                        <span class="text-secondary text-xs">@task.Title</span>
                                                                    }
                                                                }
                                                            </div>
                                                        }
                                                        @if (subject.TaskCount > 5)
                                                        {
                                                            <div class="text-xs text-muted mt-1">
                                                                <i class="fas fa-ellipsis-h"></i> +@(subject.TaskCount - 5) more tasks
                                                            </div>
                                                        }
                                                    </div>
                                                }
                                                else
                                                {
                                                    <span class="text-secondary text-xs">No tasks</span>
                                                }
                                            </td>
                                            <td class="align-middle text-center">
                                                @if (subject.TaskCount > 0)
                                                {
                                                    var progressPercentage = (double)subject.CompletedTaskCount / subject.TaskCount * 100;
                                                    <div class="progress-wrapper w-75 mx-auto">
                                                        <div class="progress-info">
                                                            <div class="progress-percentage">
                                                                <span class="text-xs font-weight-bold">@Math.Round(progressPercentage, 0)%</span>
                                                            </div>
                                                        </div>
                                                        <div class="progress">
                                                            <div class="progress-bar bg-gradient-info w-@Math.Round(progressPercentage, 0)" role="progressbar"></div>
                                                        </div>
                                                    </div>
                                                }
                                                else
                                                {
                                                    <span class="text-secondary text-xs">No tasks</span>
                                                }
                                            </td>
                                            <td class="align-middle text-center">
                                                <span class="text-secondary text-xs font-weight-bold">@subject.CreatedAt.ToString("MMM dd, yyyy")</span>
                                            </td>
                                            <td class="align-middle">
                                                <a href="@Url.Action("Edit", new { id = subject.Id })" class="text-secondary font-weight-bold text-xs me-2" data-toggle="tooltip" data-original-title="Edit subject">
                                                    <i class="fas fa-edit"></i> Edit
                                                </a>
                                                <a href="javascript:void(0)" onclick="deleteSubject('@subject.Id', '@subject.Name')" class="text-secondary font-weight-bold text-xs" data-toggle="tooltip" data-original-title="Delete subject">
                                                    <i class="fas fa-trash"></i> Delete
                                                </a>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-5">
                            <div class="icon icon-shape icon-lg bg-gradient-primary shadow text-center border-radius-lg">
                                <i class="fas fa-book opacity-10"></i>
                            </div>
                            <h5 class="mt-4">No subjects yet</h5>
                            <p class="text-sm">Start by creating your first subject to organize your tasks.</p>
                            <a href="@Url.Action("Create")" class="btn bg-gradient-primary">
                                <i class="fas fa-plus"></i>&nbsp;&nbsp;Create Your First Subject
                            </a>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" role="dialog" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel">Confirm Delete</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete the subject "<span id="subjectName"></span>"?</p>
                <p class="text-warning"><small><i class="fas fa-exclamation-triangle"></i> This action cannot be undone. Make sure the subject has no associated tasks.</small></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" id="confirmDelete">Delete Subject</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <style>
        .task-list-preview {
            max-width: 200px;
            margin: 0 auto;
        }
        
        .task-item {
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
            max-width: 100%;
        }
        
        .task-item span {
            overflow: hidden;
            text-overflow: ellipsis;
            white-space: nowrap;
            max-width: calc(100% - 20px);
            display: inline-block;
        }
        
        .task-item i {
            flex-shrink: 0;
        }
    </style>
    
    <script>
        let subjectIdToDelete = null;

        function deleteSubject(subjectId, subjectName) {
            subjectIdToDelete = subjectId;
            document.getElementById('subjectName').textContent = subjectName;
            new bootstrap.Modal(document.getElementById('deleteModal')).show();
        }

        document.getElementById('confirmDelete').addEventListener('click', function() {
            if (subjectIdToDelete) {
                // Create form and submit
                const form = document.createElement('form');
                form.method = 'POST';
                form.action = '@Url.Action("Delete")';
                
                const tokenInput = document.createElement('input');
                tokenInput.type = 'hidden';
                tokenInput.name = '__RequestVerificationToken';
                tokenInput.value = document.querySelector('input[name="__RequestVerificationToken"]').value;
                
                const idInput = document.createElement('input');
                idInput.type = 'hidden';
                idInput.name = 'id';
                idInput.value = subjectIdToDelete;
                
                form.appendChild(tokenInput);
                form.appendChild(idInput);
                document.body.appendChild(form);
                
                // Show loading state
                this.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Deleting...';
                this.disabled = true;
                
                // Submit form via AJAX
                fetch(form.action, {
                    method: 'POST',
                    body: new FormData(form)
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        location.reload();
                    } else {
                        alert(data.message || 'An error occurred while deleting the subject.');
                        this.innerHTML = 'Delete Subject';
                        this.disabled = false;
                    }
                })
                .catch(error => {
                    alert('An error occurred while deleting the subject.');
                    this.innerHTML = 'Delete Subject';
                    this.disabled = false;
                });
                
                document.body.removeChild(form);
            }
        });
    </script>
}